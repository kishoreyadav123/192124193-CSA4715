import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression


np.random.seed(0)
x = 2 * np.random.rand(100, 1)
y = 3 * x + np.random.randn(100, 1)


x_mean = np.mean(x)
y_mean = np.mean(y)
cross_deviation = np.mean(x * y) - x_mean * y_mean
deviation_x = np.mean(x ** 2) - x_mean ** 2


slope = cross_deviation / deviation_x
intercept = y_mean - slope * x_mean


def plot_regression_line(x, y, slope, intercept):
    plt.scatter(x, y, color='blue')
    plt.plot(x, slope * x + intercept, color='red')  # Regression line
    plt.xlabel('X')
    plt.ylabel('Y')
    plt.title('Linear Regression')
    plt.show()


plot_regression_line(x, y, slope, intercept)

scikit-learn LinearRegression
model = LinearRegression().fit(x, y)
print("Intercept (Scikit-learn):", model.intercept_[0])
print("Slope (Scikit-learn):", model.coef_[0][0])